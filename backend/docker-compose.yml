services:
  ########################MySQL para User Service########################
  mysql-user-db:
    image: mysql:8.0
    container_name: mysql-user-db
    ports:
      - "3307:3306" # Puerto externo 3307 mapeado al interno 3306 del contenedor
    environment:
      MYSQL_ROOT_PASSWORD: ContraSegura #Contraseña de prueba
      MYSQL_DATABASE: user_service_db
    volumes:
      - user_db_data:/var/lib/mysql
    networks:
      - movie_network

  ########################MongoDB para Movie Service########################
  mongo-movie-db:
    image: mongo:latest
    container_name: mongo-movie-db
    ports:
      - "27018:27017" # Puerto externo 27018 mapeado al interno 27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root #USER
      MONGO_INITDB_ROOT_PASSWORD: ContraSegura #Contraseña de prueba
    volumes:
      - movie_db_data:/data/db
    networks:
      - movie_network

  ########################MongoDB para Showtime Service########################
  mongo-showtime-db:
    image: mongo:latest
    container_name: mongo-showtime-db
    ports:
      - "27019:27017" # Puerto externo 27019 mapeado al interno 27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root #USER
      MONGO_INITDB_ROOT_PASSWORD: ContraSegura #Contraseña de prueba
    volumes:
      - showtime_db_data:/data/db
    networks:
      - movie_network

  ########################MongoDB para Reservation Service########################
  mongo-reservation-db:
    image: mongo:latest
    container_name: mongo-reservation-db
    ports:
      - "27020:27017" # Puerto externo 27020 mapeado al interno 27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root #USER
      MONGO_INITDB_ROOT_PASSWORD: ContraSegura #Contraseña de prueba
    volumes:
      - reservation_db_data:/data/db
    networks:
      - movie_network

  ########################User Service (Go)########################
  user-service-go:
    build: 
      context: ./Microservicios/user-service-go
      dockerfile: Dockerfile
    container_name: user-service-go
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=mysql-user-db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=ContraSegura
      - DB_NAME=user_service_db
      - JWT_SECRET=mi-clave-secreta-super-segura-para-cinereserva-2025
    depends_on:
      - mysql-user-db
    networks:
      - movie_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user-service-go.rule=PathPrefix(`/api/auth`) || PathPrefix(`/api/users`)"
      - "traefik.http.services.user-service-go.loadbalancer.server.port=8081"

  ########################Movie Service (Go)########################
  movie-service-go:
    build: 
      context: ./Microservicios/movie-service-go
      dockerfile: Dockerfile
    container_name: movie-service-go
    ports:
      - "8083:8083"
    environment:
      - MONGO_HOST=mongo-movie-db
      - MONGO_PORT=27017
      - MONGO_USER=root
      - MONGO_PASSWORD=ContraSegura
      - MONGO_DATABASE=movie_service_db
    depends_on:
      - mongo-movie-db
    networks:
      - movie_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.movie-service-go.rule=PathPrefix(`/api/movies`)"
      - "traefik.http.services.movie-service-go.loadbalancer.server.port=8083"

  ########################Showtime Service (Java - Mantener)########################
  showtime-service:
    build: 
      context: ./Microservicios/showtime-service
      dockerfile: Dockerfile
    container_name: showtime-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:ContraSegura@mongo-showtime-db:27017/showtime_service_db?authSource=admin
    depends_on:
      - mongo-showtime-db
    networks:
      - movie_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.showtime-service.rule=PathPrefix(`/api/showtimes`)"
      - "traefik.http.services.showtime-service.loadbalancer.server.port=8084"

  ########################Reservation Service (Java - Mantener)########################
  reservation-service:
    build: 
      context: ./Microservicios/reservation-service
      dockerfile: Dockerfile
    container_name: reservation-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:ContraSegura@mongo-reservation-db:27017/reservation_service_db?authSource=admin
    depends_on:
      - mongo-reservation-db
    networks:
      - movie_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.reservation-service.rule=PathPrefix(`/api/reservations`)"
      - "traefik.http.services.reservation-service.loadbalancer.server.port=8082"

  ########################Traefik API Gateway########################
  traefik:
    image: traefik:v2.10 # Usa una versión específica
    container_name: traefik-gateway
    command:
      - "--api.insecure=true" # Habilita el dashboard de Traefik (para desarrollo)
      - "--providers.docker=true" # Habilita Docker como proveedor de configuración
      - "--providers.docker.exposedbydefault=false" # No exponer servicios por defecto
      - "--entrypoints.web.address=:80" # Punto de entrada HTTP en el puerto 80
    ports:
      - "80:80"     # Puerto para el tráfico HTTP
      - "8080:8080" # Puerto para el Dashboard de Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
    networks:
      - movie_network

volumes:
  user_db_data:
  movie_db_data:
  showtime_db_data:
  reservation_db_data:

networks:
  movie_network:
    driver: bridge